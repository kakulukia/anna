# Generated by Django 4.0.5 on 2022-06-11 09:23

import django.contrib.auth.validators
import django.core.validators
import django.utils.timezone
import django_undeletable.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('concealed', models.BooleanField(default=False, editable=False)),
                ('username', models.CharField(error_messages={'unique': 'Dieser Benutzername ist bereits vergeben.'}, help_text='Erforderlich. 150 Zeichen oder weniger. Nur Buchstaben, Ziffern und @/./+/-/_.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Nutzername')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='Vorname')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Nachname')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-Mail-Adresse')),
                ('is_staff', models.BooleanField(default=False, help_text='Legt fest, ob sich der Benutzer an der Administrationsseite anmelden kann.', verbose_name='Mitarbeiter-Status')),
                ('is_active', models.BooleanField(default=True, help_text='Legt fest, ob dieser Benutzer aktiv ist. Kann deaktiviert werden, anstatt Benutzer zu l√∂schen.', verbose_name='Aktiv')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Mitglied seit')),
                ('phone_number', models.CharField(blank=True, max_length=16, validators=[django.core.validators.RegexValidator(message="Die Telefonnummer muss in folgendem Format eingegeben werden: '+999999999'. Bis zu 15 Zeichen sind erlaubt.", regex='^\\+?1?\\d{9,15}$')])),
                ('address', models.CharField(max_length=255)),
                ('start_date', models.DateField(verbose_name='Abo-Start')),
                ('end_date', models.DateField(verbose_name='Abo-Ende')),
                ('zoom_link', models.URLField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Benutzer',
                'verbose_name_plural': 'Benutzer',
                'ordering': ['-created'],
                'get_latest_by': 'created',
                'abstract': False,
                'base_manager_name': 'data',
                'default_manager_name': 'data',
            },
            managers=[
                ('data', django_undeletable.models.UserDataManager()),
                ('objects', django_undeletable.models.UserDataManager()),
            ],
        ),
    ]
